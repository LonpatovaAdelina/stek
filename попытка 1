#include <иопоток>
#include<строка>  
использование пространства имен std;

структурировать задачу
{
	символьное значение; /// информационное поле стека
	задача* следующая = nullptr; /// адресное поле стека
};

//добавление элемента
void push (задача * и стек, значение char) {

	//Создание нового элемента для помещения в стеке
	задача* тритон = новая задача;
	тритон->значение = значение;

	if (!stack) { //если пустой
		стек = тритон; //Новый элемент будет первым
		возврат;
	}

	//Стек уже существует. Новый элемент размещается на вершине
	тритон->следующий = стек;
	стек = тритон;
}

//из особого (последнего) элемента
bool pop(задача*& стек) {

	если (! стек) {
		вернуть ложь;
	}

	задача* тритон = стек; // Сохраняем посилання на вершине
	/*значение = стек->значение; // и значение, хранимое в элементе управления*/
	стек = стек->следующий; // Сообщаем о новой вершине
	удалить тритон;
	вернуть истину;
}

//получение значения элемента с вершины стека
char* peek(задача* стек) {
	если (! стек) вернуть nullptr;
	вернуть &стек->значение;
}

void clear (задача * и стек) {
	while (stack)// Удаляем все элементы стека
	{
		задача* тритон = стек;
		стек = стек->следующий;
		удалить тритон;
	}
}

интервал основной () {
	стек задач* = nullptr;

	setlocale(LC_ALL, "ru");

	строка т;
	цин >> т;

	символ открыть[5];
	символ закрыть[5];

	открыть[1] = '(';
	открыть[2] = '[';
	открыть[3] = '{';
	открыть[4] = '<';

	закрыть[1] = ')';
	закрыть[2] = ']';
	закрыть[3] = '}';
	закрыть[4] = '>';

	логический tf = ложь;
	инт п = 0;
	for (int i = 0; i < t.size(); i++) {
		инт ск = 0;
		для (целое j = 1; j < 5; j++) {
			if (t[i] == close[j]) //проверка на закр-ся скобку
				ск = j;
		}
		если (ск == 0) {
			для (целое j = 1; j < 5; j++) {
				if (t[i] == open[j]) //проверка на откр-ся скобку
					ск = j;
			}
			если (ск != 0)
				push(стек, т[я]);
		}
		еще {
			if (stack && open[sk] == *peek(stack)) pop(stack);
			еще {
				тф = правда;
				п = я + 1;
				перемена;
			}
		}
	}

	if (tf || peek(stack)) cout << "Выражение неверно. Ошибка правильности написания скобоки на месте " << n;
	else cout << "Выражение верно.";
}
